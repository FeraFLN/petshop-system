/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AnimalDialog.java
 *
 * Created on 01/05/2013, 22:13:04
 */
package br.com.chronos.vetfaunasistema.view.pessoasautorizadas;

import br.com.chronos.vetfaunasistema.business.pessoasautorizadas.PessoasAutorizadasBusiness;
import br.com.chronos.vetfaunasistema.business.pessoasautorizadas.PessoasAutorizadasBusinessImpl;
import br.com.chronos.vetfaunasistema.business.pessoasautorizadas.exception.PessoasAutorizadasBusinessException;
import br.com.chronos.vetfaunasistema.domain.PessoasAutorizadas;
import br.com.chronos.vetfaunasistema.utilitarios.enums.StatusTela;
import br.com.chronos.vetfaunasistema.utilitarios.enums.TypeMask;
import br.com.chronos.vetfaunasistema.view.component.FrameFather;
import br.com.chronos.vetfaunasistema.view.component.jformatter.MaxLengthTextDocument;
import javax.swing.JOptionPane;

/**
 *
 * @author Fernando
 */
public class PessoasAutorizadasDialog extends javax.swing.JDialog {

    private FrameFather frameFather;
    private StatusTela statusTela;
    private PessoasAutorizadasBusiness pessoasAutorizadasBusiness;
    private PessoasAutorizadas pessoasAutorizadas;

    /** Creates new form AnimalDialog */
    public PessoasAutorizadasDialog(java.awt.Frame parent, boolean modal, FrameFather frameFather) {
        super(parent, modal);
        this.frameFather = frameFather;
        pessoasAutorizadasBusiness = new PessoasAutorizadasBusinessImpl();
        initComponents();
    }

    public void preencheCampos(PessoasAutorizadas pa) {
        this.pessoasAutorizadas = pa;
        txtNome.setText(pa.getNome());
        txtObservacao.setText(pa.getObservacao());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Pessoas Autorizadas");
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Pessoais"));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel1.setText("Nome: ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 27, 110, 13);

        txtNome.setDocument(new MaxLengthTextDocument(TypeMask.TEXT, 49, ""));
        txtNome.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jPanel1.add(txtNome);
        txtNome.setBounds(10, 40, 260, 23);

        txtObservacao.setColumns(20);
        txtObservacao.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtObservacao.setRows(5);
        jScrollPane1.setViewportView(txtObservacao);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 83, 440, 120);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("Observações: ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 70, 100, 13);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 460, 220);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(120, 225, 70, 23);

        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(280, 225, 70, 23);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar);
        btnLimpar.setBounds(200, 225, 70, 23);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-478)/2, (screenSize.height-297)/2, 478, 297);
    }// </editor-fold>//GEN-END:initComponents

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    setVisible(false, null, null);
}//GEN-LAST:event_btnCancelarActionPerformed

private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
    try {
        if (StatusTela.ATUALIZAR.equals(statusTela)) {
            pessoasAutorizadasBusiness.update(getPessoasAutorizadas());
            JOptionPane.showMessageDialog(null, "Registro atualizado com sucesso.", "Aviso", 1);
            setVisible(false, null, null);
        } else {
            pessoasAutorizadasBusiness.insert(getPessoasAutorizadas());
            JOptionPane.showMessageDialog(null, "Registro incluído com sucesso.", "Aviso", 1);
            limpaCampos();
        }
    } catch (PessoasAutorizadasBusinessException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
    }

}//GEN-LAST:event_btnSalvarActionPerformed

private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
    limpaCampos();
}//GEN-LAST:event_btnLimparActionPerformed

    private PessoasAutorizadas getPessoasAutorizadas() {
        PessoasAutorizadas a = new PessoasAutorizadas();
        a.setIdPessoasAutorizadas(pessoasAutorizadas.getIdPessoasAutorizadas());
        a.setCliente(pessoasAutorizadas.getCliente());
        a.setNome(txtNome.getText());
        a.setObservacao(txtObservacao.getText());
        return a;
    }

    public void setVisible(boolean valor, PessoasAutorizadas pessoasAutorizadas, StatusTela statusTela) {
        if (valor) {
            this.statusTela = statusTela;
            limpaCampos();
            preencheCampos(pessoasAutorizadas);
            enableButtons();
        } else {
            frameFather.returnValue(null);
        }
        super.setVisible(valor);
    }

    public void dispose() {
        setVisible(false, null, null);
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextArea txtObservacao;
    // End of variables declaration//GEN-END:variables

    private void enableButtons() {
        if (StatusTela.NOVO.equals(statusTela)) {
            btnLimpar.setEnabled(true);
        } else {
            btnLimpar.setEnabled(false);
        }
    }

    private void limpaCampos() {
        txtNome.setText("");
        txtObservacao.setText("");
    }
}
